【質問対策】
下記の質問全てに簡潔かつ具体的（ここが重要）に答えられれば
9割以上の現場からはオファーが来ます。
事前に回答が準備できていれば
焦ることもありません。


・今までのプロジェクトで大変だったこと、どうやって乗り越えたか
→No.1とNo.2.1の開発になります
　No1.の開発
　　既存システムの追加開発がメイン → 設計書未存在、存在しても正しくない(古いまま更新されていない、お客様の要望が入っていない)→コード読み解いて記載
　　Ngrx(状態管理ライブラリ) → ActionやEffect等の理解が難しかった → 既存システムにあったコードやQiita等の情報を元に自身で分かりやすい資料を作成、それを元に開発
　No.2.1の開発
　元々は別のプロジェクトで参画 → 新規プロジェクトにも急遽参画しました。
　要件定義の間の3ヵ月程は勉強時間を頂けたので、公式サイトやQiita (キータ)などで学習 → Reactive Formsなどのformgroup、formcontrolが中々理解できずに苦労しました
　
　

・技術はどのように学んでいるのか
→　Udemyで初期学習
　部分的な技術内容
　　優先度　高
　　　公式サイトのドキュメント(技術の機能概要、初回の学習がメイン)
　　　Qiita (キータ)(環境構築などの分からない所、コード関連)
　　　StackOverflow（スタックオーバーフロー）(環境構築などの分からない所、コード関連)
　　優先度　低
　　　クラスメソッドの技術メディア(環境構築などの分からない所)
　　　エンジニアブログ(コード関連)



・ITの仕事は楽しいか
全てが楽しいというわけではないですが製造が一番楽しい(スパゲッティコードの確認、改修を除く)
　→新規製造が楽しい
　→頭の中で考えていた方法が実現できた時は嬉しいです
　　次に設計、環境構築の順番で楽しんでいます。



・自分から提案してプロジェクトに導入したシステムや技術はあるか
→UIデザインに関しては、設計、製造に関わらず提案をさせていただいております
→システムに関しては、設計、製造段階で機能要件を満たせないと判断した場合、上司に
　提案、相談、質疑をして直すことはあります



・なぜこの案件に関わってみたいと思ったのか
→Python(FastAPI),  Ruby(Ruby on Rails)の案件に携われるからとなります
　Python自体は2.1案件で携わっておりますが、経歴として話せる程ではありません
　その為、この案件でしっかり経歴として話せるレベルまで身に着けて自身のスキルアップに繋げたい　→　案件に携わりたいと思いました



・自分の得意なこと、苦手なこと
→得意な事は、製造に関わることです
　苦手な事は、文章のみ人に説明やら依頼する事です
　　結果から話す　→　なぜそれが必要なのか or それに至った経緯　の順で記載しているのですが、余り伝わりにくい　→　資料であれば、殆ど絵で説明 or 簡易的であれば口頭で説明



・知識的なキャッチアップが大変だと思うが、そこは大丈夫か
→大丈夫です。
　→　お金になる技術であれば、やる気も出ます(AWS、Python、Next(React)等)



・他人からは自分はどのような評価をされていると思うか、また実際にされているのか
→「石橋をたたく人」だと評価されていると思われます
　こちらは、私自身、実際に設計や製造、テスト項目の作成において、不明慮な箇所を全て潰したり、
　また、行う業務内容によっては相互確認を良く取るため、このように判断致しました



・技術経歴書に書いていないことで興味のある技術はあるか
→Next(React)とNuxt(Vue)です
　Angularで学ぶべき内容が殆ど無くなってきたので、別のFwであるReact、Vueを学ばせて頂いております



・現場のパッケージ・コンテンツ・製品を知っているか
→案件決まってから考える



・どのような技術に注目しているか
AR(拡張現実)やMR（複合現実）などに注目しています



・将来的にやってみたいこと、技術、言語はあるか。またそれはなにか
フロントのFwを一通り学習しましたら、PLやPM方面へ進もうと考えております



・【比較対象A（言語A・フレームワークA etc.）】と【比較対象B（言語B・フレームワークB etc.）】を触ってみてどこら辺が違うと感じたか
AngularとNext(React)を触ってみて、大体の構成は同じなのですが、Angularで出来ることがNext(React)で出来ない為、機能削減による学習コストの安易さを感じました



↓ここからは最新技術を採用している現場で聞かれることがある項目の一部
・ペアプログラミング(モブプログラミング)に対しての抵抗などはあるか
→抵抗ございませんが、ペアプログラミング(モブプログラミング)をやったことはないので、最初は躓く可能性がありますが、頑張ります。



・ペアプログラミング(モブプログラミング)で意見が食い違ったときはどうするか
→私または相手(または誰か)が両方の意見の結果を知っているようであれば、従います
　そうでない場合はトライ＆エラーで試して結果を比較して、意見の判断材料とします



・ペアプログラミング(モブプログラミング)などで年齢の違いがあるときはどのように接するか
→年下又は同年代or少し年上でしたら、お互いに教えあいながら接せます
　かなりの年上の方でしたら、ドライバーは問題ないのですが、性格によってはナビゲーターの場合、萎縮してしまう可能性があります


・テスト駆動開発(TDD)を行っているが、テストコードを書くことに苦手意識などはあるか
→苦手意識はございません。
ーーーーーーー